pipeline {
    agent any

   stages {
        stage('Build'){
            steps {
               withSonarQubeEnv('Sonarqube') {
                    echo '####################### BUILDING ASEKT'
                    dir ('mads-todolist-inicial') {
                        script {
                        //status = sh (returnStatus: true, script: 'mvn clean package -DistTest')
                        status = sh (returnStatus: true, script: 'mvn clean package -DistTest sonar:sonar \
  -Dsonar.projectKey=demo \
  -Dsonar.host.url=http://ec2-3-235-29-59.compute-1.amazonaws.com:9000 \
  -Dsonar.login=471685943f484024fb3437d74f97dd653a116016')
                        echo "******************************************************************** Status:  ${status} "
                        if (status == 0) {
				sh ' echo VAMOS'
                                sh 'curl ec2-3-235-29-59.compute-1.amazonaws.com:9000/api/qualitygates/project_status?projectKey=demo -o qualityGate.json'
                                qualitygate = jsonParse(readFile('qualityGate.json'))
                                echo qualitygate.toString()
                                if ("ERROR".equals(qualitygate["projectStatus"]["status"])) {
         				 error  "Quality Gate failure"
       				}
        			echo  "Quality Gate success"
                        }
                        }
                    }
               }
            }
       }
   }
   post {
        always {
            echo 'One way or another, I have finished'
        }
        success {
            echo 'I succeeeded!'
        }
        unstable {
            echo 'I am unstable :/'
        }
        failure {
            echo 'I failed :('
        }
        changed {
            echo 'Things were different before...'
        }
    }
}

